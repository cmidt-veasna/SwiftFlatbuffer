// Code generated by flatc command **DO NOT MODIFIED THIS CODE**

import Foundation

public class Test: Struct {}

extension Test {

	var a: Int16 {
		get {
			return (data!.getInteger(at: position + 0)) as Int16
		}
		set {
			try? self.data?.putShort(at: position + 0, with: newValue)
		}
	}

	var b: Int8 {
		get {
			return (data!.getInteger(at: position + 2)) as Int8
		}
		set {
			try? self.data?.putByte(at: position + 2, with: newValue)
		}
	}

}

extension Test {

	public static func createTest(_ builder: Builder, b: Int, a: Int) throws -> UOffsetT {
		try builder.prepare(size: 2, additionalBytes: 4)
		builder.paddingZero(count: 1)
		try builder.putByte(with: Int8(truncatingBitPattern: b))
		try builder.putShort(with: Int16(truncatingBitPattern: a))
		return builder.offset()
	}

}

